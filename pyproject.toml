[project]
authors = [
    {name = "sax", email = "s.apostolico@gmail.com"},
    {name = "Domenico DiNicola", email = "dom.dinicola@gmail.com"},
]
requires-python = ">=3.11"
dependencies = [
    "Faker",
    "Markdown",
    "Pillow",
    "celery",
    "cryptography",
    "django<4,>=3",
    "django-admin-extra-buttons",
    "django-admin-ordering",
    "django-admin-sync",
    "django-adminactions",
    "django-adminfilters",
    "django-appconf",
    "django-bitfield",
    "django-click",
    "django-concurrency",
    "django-constance",
    "django-cors-headers",
    "django-csp",
    "django-environ",
    "django-flags",
    "django-import-export",
    "django-jsoneditor",
    "django-picklefield",
    "django-redis",
    "django-regex",
    "django-reversion",
    "django-reversion-compare",
    "django-simple-captcha",
    "django-simple-math-captcha",
    "django-smart-admin",
    "django-strategy-field",
    "django-sysinfo",
    "django-regex",
    "djangorestframework",
    "htmlmin",
    "jmespath",
    "jsonpickle",
    "natural-keys",
    "psycopg2-binary",
    "py-mini-racer",
    "pycryptodome",
    "qrcode",
    "sentry-sdk",
    "setuptools",
    "social-auth-app-django",
    "sqlparse",
    "django-tinymce",
    "django-pwa",
    "django-mptt",
    "django-hijack",
    "channels[daphne]",
    "channels-redis",
    "django-mdeditor",
    "djangorestframework-datatables",
    "django-filter",
    "django-front-door",
    "django-debug-toolbar",
    "pygments",
    "soupsieve",
    "pyquery",
    "beautifulsoup4",
    "django-anymail[mailjet]",
    "uwsgi",
]
name = ""
version = ""
description = ""
readme = "README.md"
license = {text = "MIT"}


[tool.pdm.dev-dependencies]
dev = [
    "black<23.0.0,>=22.1.0",
    "coverage",
    "django-webtest<2.0.0,>=1.9.7",
    "factory-boy",
    "flake8",
    "freezegun<2.0.0,>=1.2.2",
    "ipython",
    "isort<6.0.0,>=5.6.4",
    "pdbpp",
    "pre-commit",
    "pyflakes",
    "pytest<7.2",
    "pytest-asyncio",
    "pytest-coverage<1.0,>=0.0",
    "pytest-django<5.0.0,>=4.1.0",
    "pytest-echo",
    "pytest-pythonpath<1.0.0,>=0.7.3",
    "pytest-selenium<3.0,>=2.0",
    "pytest-variables<3.0",
    "tox",
    "watchdog<3.0.0,>=2.1.6",
    "django-stubs[compatible-mypy]<2.0.0,>=1.16.0",
]

[tool.pdm.build]
includes = []

[tool.black]
line-length = 120
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | _build
  | buck-out
  | build
  | dist
  | migrations
  | snapshots
)/
'''

[tool.isort]
combine_as_imports = true
default_section = "THIRDPARTY"
include_trailing_comma = true
known_django = "django"
known_typing = ["typing"]
known_tests = ["unittest", "pytest"]
known_app = "aurora"
sections = ["FUTURE", 'TYPING', 'STDLIB',"TESTS",'DJANGO', 'FIRSTPARTY', 'THIRDPARTY','APP','LOCALFOLDER']
multi_line_output = 3
line_length = 120
balanced_wrapping = true
order_by_type = false
skip_glob = ["**/migrations/**"]
