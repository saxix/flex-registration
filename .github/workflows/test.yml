name: Test

on:
  push:
    branches:
      - master
      - develop
  pull_request:

jobs:
#  lint:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - uses: actions/setup-python@v2
#
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip pre-commit
#      - name:
#        run: pre-commit run --all-files

  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: aurora
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    strategy:
      fail-fast: false
      matrix:
        django-version: [ "4.2", ]
        python-version: [ "3.11", ]
        experimental: [ false ]
        include:
          - django-version: "5.0"
            python-version: "3.11"
            experimental: true
    continue-on-error: ${{ matrix.experimental }}
    env:
      DATABASE_URL: postgres://postgres:postgres@127.0.0.1:5432/aurora
      STATIC_URL: /static/
      STATIC_ROOT:
      PY_VER: ${{ matrix.python-version}}
      DJ_VER: ${{ matrix.django-version}}
      SECRET_KEY: super-secret-key
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install pdm
        run: python -m pip install --upgrade pdm

      - name: Install dependencies
        run: |
          pdm venv create
          pdm venv activate in-project
          pdm sync

      - name: Run tests
        run: pdm run pytest tests/ --create-db

      - uses: codecov/codecov-action@v1
        with:
          verbose: false # optional (default = false)
