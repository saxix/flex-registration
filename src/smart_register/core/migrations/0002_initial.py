# Generated by Django 3.2.12 on 2022-03-07 11:08

import django.contrib.postgres.fields.citext
from django.db import migrations, models
import django.db.models.deletion
import django_regex.fields
import strategy_field.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("core", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="CustomFieldType",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", django.contrib.postgres.fields.citext.CICharField(max_length=100, unique=True)),
                ("attrs", models.JSONField(default=dict)),
                ("regex", django_regex.fields.RegexField(blank=True, null=True)),
                ("clean", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="FlexForm",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", django.contrib.postgres.fields.citext.CICharField(max_length=255, unique=True)),
            ],
            options={
                "verbose_name": "FlexForm",
                "verbose_name_plural": "FlexForms",
            },
        ),
        migrations.CreateModel(
            name="OptionSet",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", django.contrib.postgres.fields.citext.CICharField(max_length=100)),
                ("data", models.TextField(blank=True, null=True)),
                ("separator", models.CharField(blank=True, default="", max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name="Validator",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", django.contrib.postgres.fields.citext.CICharField(max_length=255, unique=True)),
                ("message", models.CharField(max_length=255)),
                ("code", models.TextField(blank=True, null=True)),
                ("target", models.CharField(choices=[("form", "Form"), ("field", "Field")], max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name="FormSet",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", django.contrib.postgres.fields.citext.CICharField(max_length=255, unique=True)),
                ("extra", models.IntegerField(default=0)),
                ("dynamic", models.BooleanField(default=True)),
                ("flex_form", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="core.flexform")),
                (
                    "parent",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="formsets", to="core.flexform"
                    ),
                ),
            ],
            options={
                "verbose_name": "FormSet",
                "verbose_name_plural": "FormSets",
            },
        ),
        migrations.AddField(
            model_name="flexform",
            name="validator",
            field=models.ForeignKey(
                blank=True,
                limit_choices_to={"target": "form"},
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="core.validator",
            ),
        ),
        migrations.CreateModel(
            name="FlexFormField",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("label", models.CharField(max_length=30)),
                ("name", django.contrib.postgres.fields.citext.CICharField(blank=True, max_length=30)),
                ("field_type", strategy_field.fields.StrategyClassField()),
                ("choices", models.CharField(blank=True, max_length=2000, null=True)),
                ("required", models.BooleanField(default=False)),
                ("regex", django_regex.fields.RegexField(blank=True, null=True)),
                ("advanced", models.JSONField(blank=True, default=dict, null=True)),
                (
                    "flex_form",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="fields", to="core.flexform"
                    ),
                ),
                (
                    "validator",
                    models.ForeignKey(
                        blank=True,
                        limit_choices_to={"target": "field"},
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="core.validator",
                    ),
                ),
            ],
            options={
                "verbose_name": "FlexForm Field",
                "verbose_name_plural": "FlexForm Fields",
                "unique_together": {("name", "flex_form")},
            },
        ),
    ]
